{
    "isAbstract": false, 
    "leaf": true, 
    "name": "ActionGroup", 
    "text": "ActionGroup", 
    "interfaces": [
        [
            "Buildable"
        ]
    ], 
    "parents": [
        "ActionGroup", 
        "GObject.Object"
    ], 
    "members": {
        "signals": [
            {
                "version": "2.4", 
                "when": null, 
                "name": "connect-proxy", 
                "description": "The ::connect-proxy signal is emitted after connecting a proxy to \nan action in the group. Note that the proxy may have been connected \nto a different action before.\n\nThis is intended for simple customizations for which a custom action\nclass would be too clumsy, e.g. showing tooltips for menuitems in the\nstatusbar.\n\n#GtkUIManager proxies the signal and provides global notification \njust before any action is connected to a proxy, which is probably more\nconvenient to use."
            }, 
            {
                "version": "2.4", 
                "when": null, 
                "name": "disconnect-proxy", 
                "description": "The ::disconnect-proxy signal is emitted after disconnecting a proxy \nfrom an action in the group. \n\n#GtkUIManager proxies the signal and provides global notification \njust before any action is connected to a proxy, which is probably more\nconvenient to use."
            }, 
            {
                "version": "2.4", 
                "when": null, 
                "name": "post-activate", 
                "description": "The ::post-activate signal is emitted just after the @action in the\n@action_group is activated\n\nThis is intended for #GtkUIManager to proxy the signal and provide global\nnotification just after any action is activated."
            }, 
            {
                "version": "2.4", 
                "when": null, 
                "name": "pre-activate", 
                "description": "The ::pre-activate signal is emitted just before the @action in the\n@action_group is activated\n\nThis is intended for #GtkUIManager to proxy the signal and provide global\nnotification just before any action is activated."
            }
        ], 
        "methods": [
            {
                "isConstructor": true, 
                "returns": {
                    "doc": "the new #GtkActionGroup", 
                    "name": "ref:Gtk.ActionGroup"
                }, 
                "version": "2.4", 
                "name": "Gtk.ActionGroup(String name)", 
                "parameters": [
                    {
                        "type": "String", 
                        "name": "name"
                    }
                ]
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_action", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Action", 
                        "name": "action", 
                        "description": "an action"
                    }
                ], 
                "description": "Adds an action object to the action group. Note that this function\ndoes not set up the accel path of the action, which can lead to problems\nif a user tries to modify the accelerator of a menuitem associated with\nthe action. Therefore you must either set the accel path yourself with\ngtk_action_set_accel_path(), or use \n<literal>gtk_action_group_add_action_with_accel (..., NULL)</literal>."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_action_with_accel", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Action", 
                        "name": "action", 
                        "description": "the action to add"
                    }, 
                    {
                        "type": "String", 
                        "name": "accelerator", 
                        "description": "the accelerator for the action, in the format understood by gtk_accelerator_parse(), or \"\" for no accelerator, or %NULL to use the stock accelerator"
                    }
                ], 
                "description": "Adds an action object to the action group and sets up the accelerator.\n\nIf @accelerator is %NULL, attempts to use the accelerator associated \nwith the stock_id of the action. \n\nAccel paths are set to\n<literal>&lt;Actions&gt;/<replaceable>group-name</replaceable>/<replaceable>action-name</replaceable></literal>."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_actions", 
                "parameters": [
                    {
                        "type": "ref:Gtk.ActionEntry[]", 
                        "name": "entries", 
                        "description": "an array of action descriptions"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "n_entries", 
                        "description": "the number of entries"
                    }, 
                    {
                        "type": "Mixed", 
                        "name": "user_data", 
                        "description": "data to pass to the action callbacks"
                    }
                ], 
                "description": "This is a convenience function to create a number of actions and add them \nto the action group.\n\nThe \"activate\" signals of the actions are connected to the callbacks and \ntheir accel paths are set to \n<literal>&lt;Actions&gt;/<replaceable>group-name</replaceable>/<replaceable>action-name</replaceable></literal>."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_actions_full", 
                "parameters": [
                    {
                        "type": "ref:Gtk.ActionEntry[]", 
                        "name": "entries", 
                        "description": "an array of action descriptions"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "n_entries", 
                        "description": "the number of entries"
                    }, 
                    {
                        "type": "Mixed", 
                        "name": "user_data", 
                        "description": "data to pass to the action callbacks"
                    }, 
                    {
                        "type": "GLib.DestroyNotify", 
                        "name": "destroy", 
                        "description": "destroy notification callback for @user_data"
                    }
                ], 
                "description": "This variant of gtk_action_group_add_actions() adds a #GDestroyNotify\ncallback for @user_data."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_radio_actions", 
                "parameters": [
                    {
                        "type": "ref:Gtk.RadioActionEntry[]", 
                        "name": "entries", 
                        "description": "an array of radio action descriptions"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "n_entries", 
                        "description": "the number of entries"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "value", 
                        "description": "the value of the action to activate initially, or -1 if no action should be activated"
                    }, 
                    {
                        "type": "GObject.Callback", 
                        "name": "on_change", 
                        "description": "the callback to connect to the changed signal"
                    }, 
                    {
                        "type": "Mixed", 
                        "name": "user_data", 
                        "description": "data to pass to the action callbacks"
                    }
                ], 
                "description": "This is a convenience routine to create a group of radio actions and\nadd them to the action group. \n\nThe \"changed\" signal of the first radio action is connected to the \n@on_change callback and the accel paths of the actions are set to \n<literal>&lt;Actions&gt;/<replaceable>group-name</replaceable>/<replaceable>action-name</replaceable></literal>."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_radio_actions_full", 
                "parameters": [
                    {
                        "type": "ref:Gtk.RadioActionEntry[]", 
                        "name": "entries", 
                        "description": "an array of radio action descriptions"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "n_entries", 
                        "description": "the number of entries"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "value", 
                        "description": "the value of the action to activate initially, or -1 if no action should be activated"
                    }, 
                    {
                        "type": "GObject.Callback", 
                        "name": "on_change", 
                        "description": "the callback to connect to the changed signal"
                    }, 
                    {
                        "type": "Mixed", 
                        "name": "user_data", 
                        "description": "data to pass to the action callbacks"
                    }, 
                    {
                        "type": "GLib.DestroyNotify", 
                        "name": "destroy", 
                        "description": "destroy notification callback for @user_data"
                    }
                ], 
                "description": "This variant of gtk_action_group_add_radio_actions() adds a \n#GDestroyNotify callback for @user_data."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_toggle_actions", 
                "parameters": [
                    {
                        "type": "ref:Gtk.ToggleActionEntry[]", 
                        "name": "entries", 
                        "description": "an array of toggle action descriptions"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "n_entries", 
                        "description": "the number of entries"
                    }, 
                    {
                        "type": "Mixed", 
                        "name": "user_data", 
                        "description": "data to pass to the action callbacks"
                    }
                ], 
                "description": "This is a convenience function to create a number of toggle actions and add them \nto the action group.\n\nThe \"activate\" signals of the actions are connected to the callbacks and \ntheir accel paths are set to \n<literal>&lt;Actions&gt;/<replaceable>group-name</replaceable>/<replaceable>action-name</replaceable></literal>."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "add_toggle_actions_full", 
                "parameters": [
                    {
                        "type": "ref:Gtk.ToggleActionEntry[]", 
                        "name": "entries", 
                        "description": "an array of toggle action descriptions"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "n_entries", 
                        "description": "the number of entries"
                    }, 
                    {
                        "type": "Mixed", 
                        "name": "user_data", 
                        "description": "data to pass to the action callbacks"
                    }, 
                    {
                        "type": "GLib.DestroyNotify", 
                        "name": "destroy", 
                        "description": "destroy notification callback for @user_data"
                    }
                ], 
                "description": "This variant of gtk_action_group_add_toggle_actions() adds a \n#GDestroyNotify callback for @user_data."
            }, 
            {
                "returns": {
                    "type": "ref:Gtk.Action", 
                    "description": "the action, or %NULL if no action by that name exists"
                }, 
                "version": "2.4", 
                "name": "get_action", 
                "parameters": [
                    {
                        "type": "String", 
                        "name": "action_name", 
                        "description": "the name of the action"
                    }
                ], 
                "description": "Looks up an action in the action group by name."
            }, 
            {
                "returns": {
                    "type": "String", 
                    "description": "the name of the action group."
                }, 
                "version": "2.4", 
                "name": "get_name", 
                "parameters": null, 
                "description": "Gets the name of the action group."
            }, 
            {
                "returns": {
                    "type": "Boolean", 
                    "description": "%TRUE if the group is sensitive."
                }, 
                "version": "2.4", 
                "name": "get_sensitive", 
                "parameters": null, 
                "description": "Returns %TRUE if the group is sensitive.  The constituent actions\ncan only be logically sensitive (see gtk_action_is_sensitive()) if\nthey are sensitive (see gtk_action_get_sensitive()) and their group\nis sensitive."
            }, 
            {
                "returns": {
                    "type": "Boolean", 
                    "description": "%TRUE if the group is visible."
                }, 
                "version": "2.4", 
                "name": "get_visible", 
                "parameters": null, 
                "description": "Returns %TRUE if the group is visible.  The constituent actions\ncan only be logically visible (see gtk_action_is_visible()) if\nthey are visible (see gtk_action_get_visible()) and their group\nis visible."
            }, 
            {
                "returns": {
                    "type": "GLib.List", 
                    "description": "an allocated list of the action objects in the action group"
                }, 
                "version": "2.4", 
                "name": "list_actions", 
                "parameters": null, 
                "description": "Lists the actions in the action group."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "remove_action", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Action", 
                        "name": "action", 
                        "description": "an action"
                    }
                ], 
                "description": "Removes an action object from the action group."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "set_sensitive", 
                "parameters": [
                    {
                        "type": "Boolean", 
                        "name": "sensitive", 
                        "description": "new sensitivity"
                    }
                ], 
                "description": "Changes the sensitivity of @action_group"
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4 ", 
                "name": "set_translate_func", 
                "parameters": [
                    {
                        "type": "ref:Gtk.TranslateFunc", 
                        "name": "func", 
                        "description": "a #GtkTranslateFunc"
                    }, 
                    {
                        "type": "Mixed", 
                        "name": "data", 
                        "description": "data to be passed to @func and @notify"
                    }, 
                    {
                        "type": "GLib.DestroyNotify", 
                        "name": "notify", 
                        "description": "a #GDestroyNotify function to be called when @action_group is destroyed and when the translation function is changed again"
                    }
                ], 
                "description": "Sets a function to be used for translating the @label and @tooltip of \n#GtkActionGroupEntry<!-- -->s added by gtk_action_group_add_actions().\n\nIf you're using gettext(), it is enough to set the translation domain\nwith gtk_action_group_set_translation_domain()."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "set_translation_domain", 
                "parameters": [
                    {
                        "type": "String", 
                        "name": "domain", 
                        "description": "the translation domain to use for g_dgettext() calls, or %NULL to use the domain set with textdomain()"
                    }
                ], 
                "description": "Sets the translation domain and uses g_dgettext() for translating the \n@label and @tooltip of #GtkActionEntry<!-- -->s added by \ngtk_action_group_add_actions().\n\nIf you're not using gettext() for localization, see \ngtk_action_group_set_translate_func()."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.4", 
                "name": "set_visible", 
                "parameters": [
                    {
                        "type": "Boolean", 
                        "name": "visible", 
                        "description": "new visiblity"
                    }
                ], 
                "description": "Changes the visible of @action_group."
            }, 
            {
                "returns": {
                    "type": "String", 
                    "description": "the translation of @string"
                }, 
                "version": "2.6", 
                "name": "translate_string", 
                "parameters": [
                    {
                        "type": "String", 
                        "name": "string", 
                        "description": "a string"
                    }
                ], 
                "description": "Translates a string using the specified translate_func(). This\nis mainly intended for language bindings."
            }, 
            {
                "returns": {
                    "type": "ref:Gtk.Action", 
                    "description": "the action, or %NULL if no action by that name exists"
                }, 
                "version": "2.4", 
                "name": "get_action", 
                "parameters": [
                    {
                        "type": "String", 
                        "name": "action_name", 
                        "description": "the name of the action"
                    }
                ], 
                "description": "Looks up an action in the action group by name."
            }
        ], 
        "properties": [
            {
                "writable": false, 
                "type": "String", 
                "readable": false, 
                "name": "name", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "sensitive", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "visible", 
                "description": ""
            }
        ]
    }, 
    "fullname": "Class Gtk.ActionGroup", 
    "id": "Docs-ActionGroup", 
    "description": "Actions are organised into groups. An action group is essentially a\nmap from names to #GtkAction objects.\n\nAll actions that would make sense to use in a particular context\nshould be in a single group. Multiple action groups may be used for a\nparticular user interface. In fact, it is expected that most nontrivial\napplications will make use of multiple groups. For example, in an\napplication that can edit multiple documents, one group holding global\nactions (e.g. quit, about, new), and one group per document holding\nactions that act on that document (eg. save, cut/copy/paste, etc). Each\nwindow's menus would be constructed from a combination of two action\ngroups.\n</para>\n<para id=\"Action-Accel\">\nAccelerators are handled by the GTK+ accelerator map. All actions are\nassigned an accelerator path (which normally has the form\n<literal>&lt;Actions&gt;/group-name/action-name</literal>)\nand a shortcut is associated with this accelerator path. All menuitems\nand toolitems take on this accelerator path. The GTK+ accelerator map\ncode makes sure that the correct shortcut is displayed next to the menu\nitem.\n\n<refsect2 id=\"GtkActionGroup-BUILDER-UI\">\n<title>GtkActionGroup as GtkBuildable</title>\n<para>\nThe #GtkActionGroup implementation of the #GtkBuildable interface accepts\n#GtkAction objects as &lt;child&gt; elements in UI definitions.\n\nNote that it is probably more common to define actions and action groups\nin the code, since they are directly related to what the code can do.\n\nThe GtkActionGroup implementation of the GtkBuildable interface supports\na custom &lt;accelerator&gt; element, which has attributes named key and\nmodifiers and allows to specify accelerators. This is similar to the\n&lt;accelerator&gt; element of #GtkWidget, the main difference is that\nit doesn't allow you to specify a signal.\n</para>\n<example>\n<title>A #GtkDialog UI definition fragment.</title>\n<programlisting><![CDATA[\n<object class=\"GtkActionGroup\" id=\"actiongroup\">\n<child>\n<object class=\"GtkAction\" id=\"About\">\n<property name=\"name\">About</property>\n<property name=\"stock_id\">gtk-about</property>\n<signal handler=\"about_activate\" name=\"activate\"/>\n</object>\n<accelerator key=\"F1\" modifiers=\"GDK_CONTROL_MASK | GDK_SHIFT_MASK\"/>\n</child>\n</object>\n]]></programlisting>\n</example>\n</refsect2>"
}