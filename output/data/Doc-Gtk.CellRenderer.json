{
    "isAbstract": true, 
    "leaf": true, 
    "name": "CellRenderer", 
    "text": "CellRenderer", 
    "interfaces": [], 
    "parents": [
        "CellRenderer", 
        "GObject.InitiallyUnowned"
    ], 
    "members": {
        "signals": [
            {
                "version": "2.4", 
                "when": "first", 
                "name": "editing-canceled", 
                "description": "This signal gets emitted when the user cancels the process of editing a\ncell.  For example, an editable cell renderer could be written to cancel\nediting when the user presses Escape. \n\nSee also: gtk_cell_renderer_stop_editing()."
            }, 
            {
                "version": "2.6", 
                "when": "first", 
                "name": "editing-started", 
                "description": "This signal gets emitted when a cell starts to be edited.\nThe intended use of this signal is to do special setup\non @editable, e.g. adding a #GtkEntryCompletion or setting\nup additional columns in a #GtkComboBox.\n\nNote that GTK+ doesn't guarantee that cell renderers will\ncontinue to use the same kind of widget for editing in future\nreleases, therefore you should check the type of @editable\nbefore doing any specific setup, as in the following example:\n|[\nstatic void\ntext_editing_started (GtkCellRenderer *cell,\nGtkCellEditable *editable,\nconst gchar     *path,\ngpointer         data)\n{\nif (GTK_IS_ENTRY (editable)) \n{\nGtkEntry *entry = GTK_ENTRY (editable);\n\n/&ast; ... create a GtkEntryCompletion &ast;/\n\ngtk_entry_set_completion (entry, completion);\n}\n}\n]|"
            }
        ], 
        "methods": [
            {
                "returns": {
                    "type": "Boolean", 
                    "description": "%TRUE if the event was consumed/handled"
                }, 
                "version": "", 
                "name": "activate", 
                "parameters": [
                    {
                        "type": "Gdk.Event", 
                        "name": "event", 
                        "description": "a #GdkEvent"
                    }, 
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "widget that received the event"
                    }, 
                    {
                        "type": "String", 
                        "name": "path", 
                        "description": "widget-dependent string representation of the event location; e.g. for #GtkTreeView, a string representation of #GtkTreePath"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "background_area", 
                        "description": "background area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "cell area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "render flags"
                    }
                ], 
                "description": "Passes an activate event to the cell renderer for possible processing.  \nSome cell renderers may use events; for example, #GtkCellRendererToggle \ntoggles when it gets a mouse click."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_aligned_area", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "render flags"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "cell area which would be passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "aligned_area", 
                        "description": "the return location for the space inside @cell_area that would acually be used to render."
                    }
                ], 
                "description": "Gets the aligned area used by @cell inside @cell_area. Used for finding\nthe appropriate edit and focus rectangle."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.18", 
                "name": "get_alignment", 
                "parameters": [
                    {
                        "type": "Float", 
                        "name": "xalign", 
                        "description": "location to fill in with the x alignment of the cell, or %NULL"
                    }, 
                    {
                        "type": "Float", 
                        "name": "yalign", 
                        "description": "location to fill in with the y alignment of the cell, or %NULL"
                    }
                ], 
                "description": "Fills in @xalign and @yalign with the appropriate values of @cell."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "get_fixed_size", 
                "parameters": [
                    {
                        "type": "Integer", 
                        "name": "width", 
                        "description": "location to fill in with the fixed width of the cell, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "height", 
                        "description": "location to fill in with the fixed height of the cell, or %NULL"
                    }
                ], 
                "description": "Fills in @width and @height with the appropriate size of @cell."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.18", 
                "name": "get_padding", 
                "parameters": [
                    {
                        "type": "Integer", 
                        "name": "xpad", 
                        "description": "location to fill in with the x padding of the cell, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "ypad", 
                        "description": "location to fill in with the y padding of the cell, or %NULL"
                    }
                ], 
                "description": "Fills in @xpad and @ypad with the appropriate values of @cell."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_height", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_size", 
                        "description": "location to store the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_size", 
                        "description": "location to store the natural size, or %NULL"
                    }
                ], 
                "description": "Retreives a renderer's natural size when rendered to @widget."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_height_for_width", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "width", 
                        "description": "the size which is available for allocation"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_height", 
                        "description": "location for storing the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_height", 
                        "description": "location for storing the preferred size, or %NULL"
                    }
                ], 
                "description": "Retreives a cell renderers's minimum and natural height if it were rendered to \n@widget with the specified @width."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_size", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "ref:Gtk.Requisition", 
                        "name": "minimum_size", 
                        "description": "location for storing the minimum size, or %NULL"
                    }, 
                    {
                        "type": "ref:Gtk.Requisition", 
                        "name": "natural_size", 
                        "description": "location for storing the natural size, or %NULL"
                    }
                ], 
                "description": "Retrieves the minimum and natural size of a cell taking\ninto account the widget's preference for height-for-width management."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_width", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_size", 
                        "description": "location to store the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_size", 
                        "description": "location to store the natural size, or %NULL"
                    }
                ], 
                "description": "Retreives a renderer's natural size when rendered to @widget."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_width_for_height", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "height", 
                        "description": "the size which is available for allocation"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_width", 
                        "description": "location for storing the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_width", 
                        "description": "location for storing the preferred size, or %NULL"
                    }
                ], 
                "description": "Retreives a cell renderers's minimum and natural width if it were rendered to \n@widget with the specified @height."
            }, 
            {
                "returns": {
                    "type": "ref:Gtk.SizeRequestMode", 
                    "description": "The #GtkSizeRequestMode preferred by this renderer."
                }, 
                "version": "3.0", 
                "name": "get_request_mode", 
                "parameters": null, 
                "description": "Gets whether the cell renderer prefers a height-for-width layout\nor a width-for-height layout."
            }, 
            {
                "returns": {
                    "type": "Boolean", 
                    "description": "%TRUE if the cell renderer is sensitive"
                }, 
                "version": "2.18", 
                "name": "get_sensitive", 
                "parameters": null, 
                "description": "Returns the cell renderer's sensitivity."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "get_size", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the widget the renderer is rendering to"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "The area a cell will be allocated, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "x_offset", 
                        "description": "location to return x offset of cell relative to @cell_area, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "y_offset", 
                        "description": "location to return y offset of cell relative to @cell_area, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "width", 
                        "description": "location to return width needed to render a cell, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "height", 
                        "description": "location to return height needed to render a cell, or %NULL"
                    }
                ], 
                "description": "Obtains the width and height needed to render the cell. Used by view \nwidgets to determine the appropriate size for the cell_area passed to\ngtk_cell_renderer_render().  If @cell_area is not %NULL, fills in the\nx and y offsets (if set) of the cell relative to this location. \n\nPlease note that the values set in @width and @height, as well as those \nin @x_offset and @y_offset are inclusive of the xpad and ypad properties."
            }, 
            {
                "returns": {
                    "type": "ref:Gtk.StateFlags", 
                    "description": "the widget state flags applying to @cell"
                }, 
                "version": "3.0", 
                "name": "get_state", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "a #GtkWidget, or %NULL"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "cell_state", 
                        "description": "cell renderer state"
                    }
                ], 
                "description": "Translates the cell renderer state to #GtkStateFlags,\nbased on the cell renderer and widget sensitivity, and\nthe given #GtkCellRendererState."
            }, 
            {
                "returns": {
                    "type": "Boolean", 
                    "description": "%TRUE if the cell renderer is visible"
                }, 
                "version": "2.18", 
                "name": "get_visible", 
                "parameters": null, 
                "description": "Returns the cell renderer's visibility."
            }, 
            {
                "returns": {
                    "type": "Boolean", 
                    "description": "%TRUE if the cell renderer can do anything when activated"
                }, 
                "version": "3.0", 
                "name": "is_activatable", 
                "parameters": null, 
                "description": "Checks whether the cell renderer can do something when activated."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "render", 
                "parameters": [
                    {
                        "type": "cairo.Context", 
                        "name": "cr", 
                        "description": "a cairo context to draw to"
                    }, 
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the widget owning @window"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "background_area", 
                        "description": "entire cell area (including tree expanders and maybe padding on the sides)"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "area normally rendered by a cell renderer"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "flags that affect rendering"
                    }
                ], 
                "description": "Invokes the virtual render function of the #GtkCellRenderer. The three\npassed-in rectangles are areas in @cr. Most renderers will draw within\n@cell_area; the xalign, yalign, xpad, and ypad fields of the #GtkCellRenderer\nshould be honored with respect to @cell_area. @background_area includes the\nblank space around the cell, and also the area containing the tree expander;\nso the @background_area rectangles for all cells tile to cover the entire\n@window."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.18", 
                "name": "set_alignment", 
                "parameters": [
                    {
                        "type": "Float", 
                        "name": "xalign", 
                        "description": "the x alignment of the cell renderer"
                    }, 
                    {
                        "type": "Float", 
                        "name": "yalign", 
                        "description": "the y alignment of the cell renderer"
                    }
                ], 
                "description": "Sets the renderer's alignment within its available space."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "set_fixed_size", 
                "parameters": [
                    {
                        "type": "Integer", 
                        "name": "width", 
                        "description": "the width of the cell renderer, or -1"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "height", 
                        "description": "the height of the cell renderer, or -1"
                    }
                ], 
                "description": "Sets the renderer size to be explicit, independent of the properties set."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.18", 
                "name": "set_padding", 
                "parameters": [
                    {
                        "type": "Integer", 
                        "name": "xpad", 
                        "description": "the x padding of the cell renderer"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "ypad", 
                        "description": "the y padding of the cell renderer"
                    }
                ], 
                "description": "Sets the renderer's padding."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.18", 
                "name": "set_sensitive", 
                "parameters": [
                    {
                        "type": "Boolean", 
                        "name": "sensitive", 
                        "description": "the sensitivity of the cell"
                    }
                ], 
                "description": "Sets the cell renderer's sensitivity."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.18", 
                "name": "set_visible", 
                "parameters": [
                    {
                        "type": "Boolean", 
                        "name": "visible", 
                        "description": "the visibility of the cell"
                    }
                ], 
                "description": "Sets the cell renderer's visibility."
            }, 
            {
                "returns": {
                    "type": "ref:Gtk.CellEditable", 
                    "description": "A new #GtkCellEditable, or %NULL"
                }, 
                "version": "", 
                "name": "start_editing", 
                "parameters": [
                    {
                        "type": "Gdk.Event", 
                        "name": "event", 
                        "description": "a #GdkEvent"
                    }, 
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "widget that received the event"
                    }, 
                    {
                        "type": "String", 
                        "name": "path", 
                        "description": "widget-dependent string representation of the event location; e.g. for #GtkTreeView, a string representation of #GtkTreePath"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "background_area", 
                        "description": "background area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "cell area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "render flags"
                    }
                ], 
                "description": "Passes an activate event to the cell renderer for possible processing."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "2.6", 
                "name": "stop_editing", 
                "parameters": [
                    {
                        "type": "Boolean", 
                        "name": "canceled", 
                        "description": "%TRUE if the editing has been canceled"
                    }
                ], 
                "description": "Informs the cell renderer that the editing is stopped.\nIf @canceled is %TRUE, the cell renderer will emit the \n#GtkCellRenderer::editing-canceled signal. \n\nThis function should be called by cell renderer implementations \nin response to the #GtkCellEditable::editing-done signal of \n#GtkCellEditable."
            }, 
            {
                "returns": {
                    "type": "Boolean", 
                    "description": "%TRUE if the event was consumed/handled"
                }, 
                "version": "", 
                "name": "activate", 
                "parameters": [
                    {
                        "type": "Gdk.Event", 
                        "name": "event", 
                        "description": "a #GdkEvent"
                    }, 
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "widget that received the event"
                    }, 
                    {
                        "type": "String", 
                        "name": "path", 
                        "description": "widget-dependent string representation of the event location; e.g. for #GtkTreeView, a string representation of #GtkTreePath"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "background_area", 
                        "description": "background area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "cell area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "render flags"
                    }
                ], 
                "description": "Passes an activate event to the cell renderer for possible processing.  \nSome cell renderers may use events; for example, #GtkCellRendererToggle \ntoggles when it gets a mouse click."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "editing_canceled", 
                "parameters": null, 
                "description": ""
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "editing_started", 
                "parameters": [
                    {
                        "type": "ref:Gtk.CellEditable", 
                        "name": "editable", 
                        "description": ""
                    }, 
                    {
                        "type": "String", 
                        "name": "path", 
                        "description": ""
                    }
                ], 
                "description": ""
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_aligned_area", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "render flags"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "cell area which would be passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "aligned_area", 
                        "description": "the return location for the space inside @cell_area that would acually be used to render."
                    }
                ], 
                "description": "Gets the aligned area used by @cell inside @cell_area. Used for finding\nthe appropriate edit and focus rectangle."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_height", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_size", 
                        "description": "location to store the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_size", 
                        "description": "location to store the natural size, or %NULL"
                    }
                ], 
                "description": "Retreives a renderer's natural size when rendered to @widget."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_height_for_width", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "width", 
                        "description": "the size which is available for allocation"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_height", 
                        "description": "location for storing the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_height", 
                        "description": "location for storing the preferred size, or %NULL"
                    }
                ], 
                "description": "Retreives a cell renderers's minimum and natural height if it were rendered to \n@widget with the specified @width."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_width", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_size", 
                        "description": "location to store the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_size", 
                        "description": "location to store the natural size, or %NULL"
                    }
                ], 
                "description": "Retreives a renderer's natural size when rendered to @widget."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "3.0", 
                "name": "get_preferred_width_for_height", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the #GtkWidget this cell will be rendering to"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "height", 
                        "description": "the size which is available for allocation"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "minimum_width", 
                        "description": "location for storing the minimum size, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "natural_width", 
                        "description": "location for storing the preferred size, or %NULL"
                    }
                ], 
                "description": "Retreives a cell renderers's minimum and natural width if it were rendered to \n@widget with the specified @height."
            }, 
            {
                "returns": {
                    "type": "ref:Gtk.SizeRequestMode", 
                    "description": "The #GtkSizeRequestMode preferred by this renderer."
                }, 
                "version": "3.0", 
                "name": "get_request_mode", 
                "parameters": null, 
                "description": "Gets whether the cell renderer prefers a height-for-width layout\nor a width-for-height layout."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "get_size", 
                "parameters": [
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the widget the renderer is rendering to"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "The area a cell will be allocated, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "x_offset", 
                        "description": "location to return x offset of cell relative to @cell_area, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "y_offset", 
                        "description": "location to return y offset of cell relative to @cell_area, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "width", 
                        "description": "location to return width needed to render a cell, or %NULL"
                    }, 
                    {
                        "type": "Integer", 
                        "name": "height", 
                        "description": "location to return height needed to render a cell, or %NULL"
                    }
                ], 
                "description": "Obtains the width and height needed to render the cell. Used by view \nwidgets to determine the appropriate size for the cell_area passed to\ngtk_cell_renderer_render().  If @cell_area is not %NULL, fills in the\nx and y offsets (if set) of the cell relative to this location. \n\nPlease note that the values set in @width and @height, as well as those \nin @x_offset and @y_offset are inclusive of the xpad and ypad properties."
            }, 
            {
                "returns": {
                    "type": "void", 
                    "description": ""
                }, 
                "version": "", 
                "name": "render", 
                "parameters": [
                    {
                        "type": "cairo.Context", 
                        "name": "cr", 
                        "description": "a cairo context to draw to"
                    }, 
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "the widget owning @window"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "background_area", 
                        "description": "entire cell area (including tree expanders and maybe padding on the sides)"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "area normally rendered by a cell renderer"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "flags that affect rendering"
                    }
                ], 
                "description": "Invokes the virtual render function of the #GtkCellRenderer. The three\npassed-in rectangles are areas in @cr. Most renderers will draw within\n@cell_area; the xalign, yalign, xpad, and ypad fields of the #GtkCellRenderer\nshould be honored with respect to @cell_area. @background_area includes the\nblank space around the cell, and also the area containing the tree expander;\nso the @background_area rectangles for all cells tile to cover the entire\n@window."
            }, 
            {
                "returns": {
                    "type": "ref:Gtk.CellEditable", 
                    "description": "A new #GtkCellEditable, or %NULL"
                }, 
                "version": "", 
                "name": "start_editing", 
                "parameters": [
                    {
                        "type": "Gdk.Event", 
                        "name": "event", 
                        "description": "a #GdkEvent"
                    }, 
                    {
                        "type": "ref:Gtk.Widget", 
                        "name": "widget", 
                        "description": "widget that received the event"
                    }, 
                    {
                        "type": "String", 
                        "name": "path", 
                        "description": "widget-dependent string representation of the event location; e.g. for #GtkTreeView, a string representation of #GtkTreePath"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "background_area", 
                        "description": "background area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "Gdk.Rectangle", 
                        "name": "cell_area", 
                        "description": "cell area as passed to gtk_cell_renderer_render()"
                    }, 
                    {
                        "type": "ref:Gtk.CellRendererState", 
                        "name": "flags", 
                        "description": "render flags"
                    }
                ], 
                "description": "Passes an activate event to the cell renderer for possible processing."
            }
        ], 
        "properties": [
            {
                "writable": false, 
                "type": "String", 
                "readable": false, 
                "name": "cell-background", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Gdk.Color", 
                "readable": false, 
                "name": "cell-background-gdk", 
                "description": "Cell background as a #GdkColor"
            }, 
            {
                "writable": false, 
                "type": "Gdk.RGBA", 
                "readable": false, 
                "name": "cell-background-rgba", 
                "description": "Cell background as a #GdkRGBA"
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "cell-background-set", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "editing", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Integer", 
                "readable": false, 
                "name": "height", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "is-expanded", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "is-expander", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Gtk.CellRendererMode", 
                "readable": false, 
                "name": "mode", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "sensitive", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Boolean", 
                "readable": false, 
                "name": "visible", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Integer", 
                "readable": false, 
                "name": "width", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Float", 
                "readable": false, 
                "name": "xalign", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Integer", 
                "readable": false, 
                "name": "xpad", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Float", 
                "readable": false, 
                "name": "yalign", 
                "description": ""
            }, 
            {
                "writable": false, 
                "type": "Integer", 
                "readable": false, 
                "name": "ypad", 
                "description": ""
            }
        ]
    }, 
    "fullname": "Class Gtk.CellRenderer", 
    "id": "Docs-CellRenderer", 
    "description": "The #GtkCellRenderer is a base class of a set of objects used for\nrendering a cell to a #cairo_t.  These objects are used primarily by\nthe #GtkTreeView widget, though they aren't tied to them in any\nspecific way.  It is worth noting that #GtkCellRenderer is not a\n#GtkWidget and cannot be treated as such.\n\nThe primary use of a #GtkCellRenderer is for drawing a certain graphical\nelements on a #cairo_t. Typically, one cell renderer is used to\ndraw many cells on the screen.  To this extent, it isn't expected that a\nCellRenderer keep any permanent state around.  Instead, any state is set\njust prior to use using #GObject<!-- -->s property system.  Then, the\ncell is measured using gtk_cell_renderer_get_size(). Finally, the cell\nis rendered in the correct location using gtk_cell_renderer_render().\n\nThere are a number of rules that must be followed when writing a new\n#GtkCellRenderer.  First and formost, its important that a certain set\nof properties will always yield a cell renderer of the same size,\nbarring a #GtkStyle change.  The #GtkCellRenderer also has a number of\ngeneric properties that are expected to be honored by all children.\n\nBeyond merely rendering a cell, cell renderers can optionally\nprovide active user interface elements. A cell renderer can be\n<firstterm>activatable</firstterm> like #GtkCellRendererToggle,\nwhich toggles when it gets activated by a mouse click, or it can be\n<firstterm>editable</firstterm> like #GtkCellRendererText, which\nallows the user to edit the text using a #GtkEntry.\nTo make a cell renderer activatable or editable, you have to\nimplement the #GtkCellRendererClass.activate or\n#GtkCellRendererClass.start_editing virtual functions, respectively."
}